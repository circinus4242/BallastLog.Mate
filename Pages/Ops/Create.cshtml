@page
@model BallastLog.Mate.Pages.Ops.CreateModel
@{
    ViewData["Title"] = "New Operation";
}
<link rel="stylesheet" href="/site.css" />

<h2>New operation</h2>

<!-- One MAIN form for the whole page. All actions use formaction to choose handlers. -->
<form id="mainForm" method="post">

    <div asp-validation-summary="All" class="small" style="color:#b00"></div>

    <div class="flex" style="flex-wrap:wrap">
        <div>
            <div>Type</div>
            <select class="input" asp-for="Op.Type">
                <option value="B">BALLAST (B)</option>
                <option value="DB">DEBALLAST (DB)</option>
                <option value="TR">INTERNAL (TR)</option>
                <option value="MISC">MISC</option>
            </select>
        </div>
        <div>
            <div>Start (local)</div>
            <input class="input"
                   asp-for="Op.StartLocal"
                   type="datetime-local"
                   step="60"
                   asp-format="{0:yyyy-MM-ddTHH:mm}" />
        </div>
        <div>
            <div>Stop (local)</div>
            <input class="input"
                   asp-for="Op.StopLocal"
                   type="datetime-local"
                   step="60"
                   asp-format="{0:yyyy-MM-ddTHH:mm}" />
        </div>
        <div>
            <div>Time zone (±HH:MM)</div>
            <input class="input mono" asp-for="Op.TzOffset" />
        </div>
        <div style="flex-basis:100%"></div>
        <div><div>Location start</div><input class="input" asp-for="Op.LocationStart" /></div>
        <div><div>Location stop</div><input class="input" asp-for="Op.LocationStop" /></div>
        <div style="flex-basis:100%"></div>
        <div><div>Remark</div><input class="input" asp-for="Op.Remark" style="min-width:400px" /></div>
        <div style="flex-basis:100%"></div>

        <div><div>@Model.C1Label</div><input class="input" asp-for="Op.Custom1" /></div>
        <div><div>@Model.C2Label</div><input class="input" asp-for="Op.Custom2" /></div>
        <div><div>@Model.C3Label</div><input class="input" asp-for="Op.Custom3" /></div>
        <div><div>@Model.C4Label</div><input class="input" asp-for="Op.Custom4" /></div>
        <div><div>@Model.C5Label</div><input class="input" asp-for="Op.Custom5" /></div>
    </div>

    <hr />

    <div class="flex" style="align-items:flex-start">
        <!-- FROM panel -->
        <div style="width:40%">
            <h3>FROM</h3>
            <div class="small">Add tanks (or SEA)</div>
            <div class="flex">
                <select class="input" name="targetFrom" form="mainForm">
                    <option value="SEA">SEA</option>
                    @foreach (var t in Model.TankChoices)
                    {
                        <option value="@t.Id">@t.Code (@t.CurrentCapacity/@t.MaxCapacity)</option>
                    }
                </select>
                <button class="btn" type="submit" formaction="?handler=AddLeg" formmethod="post" name="side" value="from">Add</button>
            </div>

            <table class="table">
                <thead><tr><th>Tank</th><th>Cur/Max</th><th>m³</th><th></th></tr></thead>
                <tbody>
                    @for (int i = 0; i < Model.From.Count; i++)
                    {
                        <tr>
                            <td>@Model.From[i].Label</td>
                            <td>@(Model.From[i].IsSea ? "-" : $"{Model.From[i].Current}/{Model.From[i].Max}")</td>
                            <td><input class="input mono" type="number" min="0" name="From[@i].Delta" value="@Model.From[i].Delta" /></td>
                            <td>
                                <button class="btn update-btn" type="submit" formaction="?handler=Rebalance&which=from&index=@i" formmethod="post">OK</button>
                                <input type="hidden" name="From[@i].Label" value="@Model.From[i].Label" />
                                <input type="hidden" name="From[@i].TankId" value="@Model.From[i].TankId" />
                                <input type="hidden" name="From[@i].IsSea" value="@Model.From[i].IsSea" />
                                <input type="hidden" name="From[@i].Current" value="@Model.From[i].Current" />
                                <input type="hidden" name="From[@i].Max" value="@Model.From[i].Max" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- TOTAL panel -->
        <div style="width:20%; text-align:center">
            <h3>→ TOTAL</h3>
            <input class="input mono" type="number" min="0" name="Total" value="@Model.Total" style="width:120px" />
            <div style="margin-top:.5rem">
                <button class="btn update-btn" type="submit" formaction="?handler=Rebalance&which=total" formmethod="post">OK</button>
            </div>
            <div class="small" style="margin-top:.5rem">
                Flow (calc): @((Model.Total / Math.Max((Model.Op.StopLocal - Model.Op.StartLocal).TotalHours, 1.0 / 60.0)).ToString("0.##")) m³/h
            </div>
        </div>

        <!-- TO panel -->
        <div style="width:40%">
            <h3>TO</h3>
            <div class="small">Add tanks (or SEA)</div>
            <div class="flex">
                <select class="input" name="targetTo" form="mainForm">
                    <option value="SEA">SEA</option>
                    @foreach (var t in Model.TankChoices)
                    {
                        <option value="@t.Id">@t.Code (@t.CurrentCapacity/@t.MaxCapacity)</option>
                    }
                </select>
                <button class="btn" type="submit" formaction="?handler=AddLeg" formmethod="post" name="side" value="to">Add</button>
            </div>

            <table class="table">
                <thead><tr><th>Tank</th><th>Cur/Max</th><th>m³</th><th></th></tr></thead>
                <tbody>
                    @for (int i = 0; i < Model.To.Count; i++)
                    {
                        <tr>
                            <td>@Model.To[i].Label</td>
                            <td>@(Model.To[i].IsSea ? "-" : $"{Model.To[i].Current}/{Model.To[i].Max}")</td>
                            <td><input class="input mono" type="number" min="0" name="To[@i].Delta" value="@Model.To[i].Delta" /></td>
                            <td>
                                <button class="btn update-btn" type="submit" formaction="?handler=Rebalance&which=to&index=@i" formmethod="post">OK</button>
                                <input type="hidden" name="To[@i].Label" value="@Model.To[i].Label" />
                                <input type="hidden" name="To[@i].TankId" value="@Model.To[i].TankId" />
                                <input type="hidden" name="To[@i].IsSea" value="@Model.To[i].IsSea" />
                                <input type="hidden" name="To[@i].Current" value="@Model.To[i].Current" />
                                <input type="hidden" name="To[@i].Max" value="@Model.To[i].Max" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div style="margin-top:1rem">
        <button class="btn" type="submit" formaction="?handler=Save" formmethod="post">Save operation</button>
        <a class="btn" href="/Ops">Cancel</a>
    </div>

</form>

<script>
    // Press Enter in any m³ input triggers the nearest OK button, else the Total OK.
    document.addEventListener('keydown', function(e){
      if(e.key === 'Enter'){
        const tr = e.target.closest('tr');
        const btn = tr?.querySelector('.update-btn') ?? document.querySelector('button.update-btn[formaction*="which=total"]');
        if(btn){ e.preventDefault(); btn.click(); }
      }
    }, true);
</script>
